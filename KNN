import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import StandardScaler

# Step 1: Load the dataset
df = pd.read_csv("patients.csv")

# Step 2: Separate features and target label
X = df.drop('label', axis=1)  # Symptom features
y = df['label']               # 0 or 1

# Step 3: Preprocessing (standard scaling)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Step 4: Train/test split (optional for evaluation)
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Step 5: User input
print("Enter values for the following symptoms:")
input_features = []
for col in X.columns:
    val = float(input(f"{col}: "))
    input_features.append(val)

k = int(input("Enter the value of k (number of neighbors): "))

# Step 6: Train KNN model
knn = KNeighborsClassifier(n_neighbors=k)
knn.fit(X_train, y_train)

# Step 7: Predict for the new patient
# Donâ€™t forget to scale the input too!
input_scaled = scaler.transform([input_features])
prediction = knn.predict(input_scaled)

# Step 8: Output result
if prediction[0] == 1:
    print("ðŸ”´ The patient is likely to have the medical condition.")
else:
    print("ðŸŸ¢ The patient is not likely to have the medical condition.")
